version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15
    container_name: deep_origin_assessment
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-url_shortener_assessment}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./server/sql/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - '5432:5432'
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${POSTGRES_USER:-postgres}']
      interval: 30s
      timeout: 15s
      retries: 3

  # Full-stack Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - '3000:3000' # application
      - '5555:5555' # for Prisma Studio
    environment:
      # Database connection
      DATABASE_URL: postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-password}@db:5432/${POSTGRES_DB:-url_shortener_assessment}

      # Node environment
      NODE_ENV: production
      PORT: ${PORT:-3000}

      # Application secrets
      JWT_SECRET: ${JWT_SECRET:-deep_origin_secret}

      # Individual DB connection vars (if your app uses these separately)
      DB_HOST: db
      DB_PORT: 5432
      DB_NAME: ${POSTGRES_DB:-url_shortener_assessment}
      DB_USER: ${POSTGRES_USER:-postgres}
      DB_PASSWORD: ${POSTGRES_PASSWORD:-password}

    depends_on:
      db:
        condition: service_healthy

    # Run migrations and start the app
    command: sh -c "npx prisma migrate deploy && npx prisma db seed && node dist/index.js"

volumes:
  postgres_data:
